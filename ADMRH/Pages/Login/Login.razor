@page "/login"
@using ADMRH.Pages.Vacantes
@layout PublicLayout
@inject HttpClient http
@inject NavigationManager navigation
@inject ILocalStorageService localStorageService 
@inject IJSRuntime JSRuntime

<div class="row d-flex px-3">
    <div class="col-xl-3 d-flex p-3"></div>
    <div class="col-xl-6 d-flex p-3">
        <RadzenCard Style="width: 100%;">
            <h2 class="mb-4">Inicia Sesión</h2>
            <RadzenTemplateForm Data=@("Login")>
                <RadzenLogin
                    LoginText="Acceder"
                    UserText="Usuario"
                    PasswordText="Contraseña"
                    AllowRegister="false"
                    AllowResetPassword="false"
                    Login=@(args => OnLogin(args))
                />
            </RadzenTemplateForm>
        </RadzenCard>
    </div>
</div>

@code {
    public bool loading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = await localStorageService.GetItemAsync<UserClaims>("user");

        if (user != null)
        {
            await JSRuntime.InvokeVoidAsync("history.back");
        }

        await base.OnInitializedAsync();
    }

    async void OnLogin(LoginArgs args)
    {
        loading = true;

        var credentials = new
        {
            user = args.Username,
            pass = args.Password
        };

        var userString = JsonSerializer.Serialize(credentials);
        var requestContent = new StringContent(userString, Encoding.UTF8, "application/json");
        var response = await http.PostAsync("https://localhost:44322/api/InitUser", requestContent);

        var jsonData = await response.Content.ReadFromJsonAsync<Response>();

        if (!jsonData.ok || jsonData.claims == null)
        {
            await localStorageService.RemoveItemAsync("user");
            return;
        }

        await localStorageService.SetItemAsync("user", jsonData.claims);
        navigation.NavigateTo($"/home");
        loading = false;
    }

    async void OnLogOut()
    {
        await localStorageService.RemoveItemAsync("user");
        navigation.NavigateTo($"/login");
    }

    public class Response
    {
        public bool ok { get; set; }
        public UserClaims claims { get; set; }
        public string mensaje { get; set; }
    }
}
